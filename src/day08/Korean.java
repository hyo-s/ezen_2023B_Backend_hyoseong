package day08;  // PACKAGE NAME

public class Korean {   // CLASS START

    // 클래스 멤버
    // 1. 필드        객체에 데이터 저장
        // 객체들간의 동일한 값이면 필드 선언시 초기화
    String nation = "대한민국";
    String name;
    String ssn;
    // 2. 생성자       객체의 초기화
        // 객체들간의 다른 값을 가져야 할때
        // 1. 생성자명 작성한다 단 클래스명과 동일해야 한다.
        // 2. ( )를 이용해 안에 매개변수를 정의한다.
        // 3. { } 안에 생성자 호출 시 처리할 명령어/로직 작성
    Korean(){};
    // 매개변수 명과 현재 클래스내 필드명과 중복 발생할 수 있다.
    Korean(String n, String s){
        // 유효성 검사 // 만약에 name의 글자수가 3이상이면 이런거
        // 직접 입력받으면 필터링을 할 수 없다 main 스레드 -> 필드
        // 개발자는 형식에 맞게 사용을 하나 클라이언트는 그렇지 않다.
        // main 스레드에서 입력받아와서 생성자 매개변수에 넣고 { } 로직 거쳐서 필드로 감

        // 그래서 매개변수 이름과 현재 클래스내 필드명과 다르면 this 쓸 필요가 없다.
        // 단 : 관례적으로 동일하게 사용해야 한다. -> 외부로부터 들어오는 매개변수와 원래 객체내 있던 필드명과 충돌
        // 구분 : this 현재 객체내 필드임을 명시/호출 : 현재(생성자/메소드) 실행하고 있는 객체
        this.name = n;
        this.ssn = s;
    }
    // 3. 메소드       객체의 동작

    // 객체의 주소값 대신 객체의 필드정보 출력시 사용되는 함수
    // 오른쪽 클릭 -> 생성 -> toString()
    @Override
    public String toString() {
        return "Korean{" +
                "nation='" + nation + '\'' +
                ", name='" + name + '\'' +
                ", ssn='" + ssn + '\'' +
                '}';
    }
}   // CLASS END
