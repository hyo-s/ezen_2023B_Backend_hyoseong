데이터 베이스
    데이터(자료)베이스(모임) : 자료들의 모임
    여러 사람들이 공유하여 사용할 목적으로 체계화된 데이터의 집합

데이터베이스 종류
    1. 계층형 데이터베이스
    2. 네트워크형 데이터베이스
    3. (*)관계형 데이터베이스
    4. key-value 데이터베이스

용어
    DB : 데이터베이스
    DB SERVER : 데이터베이스 위치하는 곳( port : 3306 ) / 서버:자료제공 vs 클라이언트:자료요청
    DBMS : 데이터베이스 관리 시스템
        오라클, MYSQL, MSSQL 등등 - 약간의 문법차이
    DBA : 데이터베이스 관리자
    SQL : 프로그래밍 언어 --> 문법

      DBA ---------> DBMS ---------> DB
    [개발자]       [소프트웨어]       [자료]
    A저장         insert a          010101-2진수

관계형 데이터베이스  RDBMS
    현재 가장 많이 사용되는 데이터베이스 종류
    행과 열로 이루어진 각각의 테이블을 !!(고유값)을 참조하여 서로 종속되는 관계(=연결)를 표현

테이블 기본용어
    레코드/튜플/행/가로 : 관계된 데이터들의 가로로 묶음 = 객체
    필드/속성/열/세로  : 가장 작은 단위 데이터
    테이블/릴레이션    : 행과 열로 이루어진 데이터집합
    키   : 테이블에서 행의 식별자로 이용되는 식별 데이터
===============================================================================================
제약조건 : 데이터의 검사 규칙
    테이블 선언 시 필드 타입 뒤에서 작성
        create table 테이블명(
            필드명 타입 제약조건명,
            필드명 타입 제약조건명
        );
    종류
        1. not null             : (공백제거) 필드 내에 null 포함하지 않는다.  [ 레코드 삽입 시 필드값을 생략하면 자동으로 null ]
        2. default              : (기본값) 해당 필드의 기본값 설정
        3. unique               : (중복제거) 필드 내 중복된 값을 저장 할 수 없다
        4. primary key(pk 필드명) :  해당 필드를 기본키로 사용 [ 테이블당 1개 이상 권장 ]
        5. foreign key(fk 필드명) references 참조할테이블명(pk 필드) : 해당 필드를 참조키로 사용 [ 참조 테이블에서 사용 ]
===============================================================================================
	SQL : 데이터베이스에서 사용하는 데이터 처리 언어
    1. DDL( Data Definition Language ) 정의어	 [ RollBack 불가능 ]
		create : 데이터베이스 / 테이블 / 뷰 생성
			1. 데이터베이스 생성
				create database	데이터베이스명;
			2. 테이블 생성
				create table 테이블명(필드명 타입 제약조건, 필드명 타입 제약조건);
        drop : 데이터베이스 / 테이블 / 뷰 삭제
			1. 데이터베이스 생성
				drop database if exists 데이터베이스명;
			2. 테이블 생성
				drop table if exists 테이블명;
		use : 사용할 데이터베이스 선택
			use 데이터베이스명;
		truncate : 데이터 삭제
	2. DML( Data Manipuldation Language ) 조작어 *	[ RollBack 불가능 ]
		[C] insert : 레코드 삽입
			모든 레코드 삽입
				insert into 테이블명 values ( 값1, 값2 ); - 필드의 순서에 맞게 대입
            특정 레코드 삽입
				insert into 테이블명 ( 필드1, 필드2 ) values ( 값1, 값2 );
        [R] select	: 레코드 검색
			모든 필드(*)를 표시한 레코드 검색
				select * from 테이블명 ( * 와일드카드 / 전체라는 뜻 )
            특정 필드를 표시한 레코드 검색
				select 필드명 from 테이블명
        [U] update	: 레코드 필드의 값 수정
			모든 레코드의 필드 값 수정
				update 테이블명 set 수정할필드명 = 수정할값, 수정할필드명 = 수정할값;
            특정(조건에 충족하는) 레코드 필드값 수정
				update 테이블명 set 수정할필드명 = 새로운값, 수정할필드명 = 새로운 값 where 조건식;
        [D] delete	: 레코드 삭제
			모든 레코드 삭제
				delete from 테이블명;
            특정(조건에 충족하는) 레코드 삭제
				delete from 테이블명 where 조건식;
	3. 제약조건
		not null : 필드에 null을 넣지 않겠다
        unique : 중복을 없앤다
        default 값 : 필드에 값을 입력하지 않을때 기본값
        primary key ( pk필드명 )
        foreign key ( fk필드명 ) references 참조할테이블명 ( 참조할pk필드명 )

	4. where 조건절
===============================================================================================
자바와 DB 서버 연결
    0.JDBC Driver : 각 DBMS 회사에서 다운로드 받으세요.
    1. IP : 인터넷 프로토콜 = 인터넷 사용하고 있는 PC 들의 식별번호
        PC 1대당 IP 1개 / WIFI 사용시 IP 할당
        서로 다른 PC들 간의 데이터 통신시 식별하기 위해
        예시] 집 주소 ( 친구에게 우편 보내기 위해 집 주소 )
    2. PORT : 프로그램 식별번호
        PC 1대당 많은 PORT  0 ~ 65535
        프로그램(프로세스) 식별하는 번호
        MYSQL : 3306 / ORACLE : 1521 / HTTP : 80
        예시] 방 번호 ( 집에서 방을 식별하는 번호 )
    3. DB 서버의 계정 / 비밀번호
        ROOT / 1234
    4. DB 서버 내 여러개 DB 중 사용할 DB
===============================================================================================
1. MYSQL -> Connector/J 다운로드
    mysql-connector-j-8.3.0.jar
2. 프로젝트에 라이브러리 등록/추가
    1. 프로젝트 해당 파일(mysql-connector-j-8.3.0.jar) 복사
    2. mysql-connector-j-8.3.0.jar -> 우클릭 -> 라이브러리로 추가
    3. [확인]
        메뉴 -> 파일 -> 프로젝트 구조 -> (사이드메뉴) 라이브러리